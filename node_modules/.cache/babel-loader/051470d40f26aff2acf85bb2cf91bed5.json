{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0442\\u0441\\\\todo\\\\src\\\\components\\\\Todo\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport CardContent from '@material-ui/core/CardContent';\nimport ItemList from '../ItemList/ItemList';\nimport InputItem from '../InputItem/InputItem';\nimport Footer from '../Footer/Footer';\nimport styles from './Todo.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = () => {\n  _s();\n\n  const initialState = {\n    items: [{\n      value: 'Create a new application.',\n      isDone: false,\n      id: 1\n    }, {\n      value: 'Talk to my friend.',\n      isDone: true,\n      id: 2\n    }, {\n      value: 'Make one more step closer to my goal.',\n      isDone: true,\n      id: 3\n    }],\n    count: 3\n  };\n  const [items, setItems] = useState(initialState.items);\n  const [visibleItems, setvisibleItems] = useState();\n  const [count, setCount] = useState(initialState.count);\n  useEffect(() => {\n    console.log('mount');\n  }, []);\n  useEffect(() => {\n    console.log('update');\n  });\n\n  const onClickDone = id => {\n    const newItemList = items.map(item => {\n      const newItem = { ...item\n      };\n\n      if (item.id === id) {\n        newItem.isDone = !item.isDone;\n      }\n\n      return newItem;\n    });\n    setItems(newItemList);\n  };\n\n  const onClickDelete = id => {\n    const newItemList = items.filter(item => {\n      return item.id !== id;\n    });\n    setItems(newItemList);\n    setCount(count - 1);\n  };\n\n  const onClickAdd = value => {\n    setItems([...items, {\n      value,\n      isDone: false,\n      id: count + 1\n    }]);\n    setCount(count + 1);\n  };\n\n  function itemsFilter(itemList, value) {\n    switch (value) {\n      case 'Active':\n        return itemList.filter(item => !item.isDone);\n\n      case 'Completed':\n        return itemList.filter(item => item.isDone);\n\n      case 'All':\n      default:\n        return itemList;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(CardContent, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Important tasks: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputItem, {\n      onClickAdd: onClickAdd,\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      items: items,\n      onClickDone: onClickDone,\n      onClickDelete: onClickDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      count: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"Fnd8hLqma+m5zMR9zgmhzGDdykg=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/тс/todo/src/components/Todo/Todo.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Link","CardContent","ItemList","InputItem","Footer","styles","Todo","initialState","items","value","isDone","id","count","setItems","visibleItems","setvisibleItems","setCount","console","log","onClickDone","newItemList","map","item","newItem","onClickDelete","filter","onClickAdd","itemsFilter","itemList","title"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport ItemList from '../ItemList/ItemList';\r\nimport InputItem from '../InputItem/InputItem';\r\nimport Footer from '../Footer/Footer';\r\nimport styles from './Todo.module.css';\r\n\r\nconst Todo = () => {\r\n    const initialState = {\r\n    items: [\r\n      {\r\n        value: 'Create a new application.',\r\n        isDone: false,\r\n        id: 1\r\n      },\r\n      {\r\n        value: 'Talk to my friend.',\r\n        isDone: true,\r\n        id: 2\r\n      },\r\n      {\r\n        value: 'Make one more step closer to my goal.',\r\n        isDone: true,\r\n        id: 3\r\n      }\r\n    ],\r\n    count: 3\r\n  };\r\n\r\n  const [items, setItems] = useState(initialState.items);\r\n  const [visibleItems, setvisibleItems] = useState();\r\n  const [count, setCount] = useState(initialState.count);\r\n\r\n  useEffect(() => {console.log('mount');}, []);\r\n  useEffect(() => {console.log('update');});\r\n\r\n  const onClickDone = id => {\r\n    const newItemList = items.map(item => {\r\n      const newItem = { ...item };\r\n      if (item.id === id) {\r\n        newItem.isDone = !item.isDone;\r\n      }\r\n      return newItem;\r\n    });\r\n    setItems(newItemList);\r\n  };\r\n\r\n  \r\n  const onClickDelete = id => {\r\n    const newItemList = items.filter(item =>{\r\n    return item.id !== id; \r\n      });\r\n      setItems(newItemList)\r\n      setCount(count - 1)\r\n  };\r\n  \r\n  const onClickAdd = value => {\r\n    setItems (\r\n      [...items,\r\n        {\r\n          value,\r\n          isDone: false,\r\n          id: count + 1\r\n    }]);\r\n      setCount(count + 1)\r\n  }\r\n\r\n  function itemsFilter(itemList, value) {\r\n    switch (value) {\r\n      case 'Active': return itemList.filter(item => !item.isDone);\r\n      case 'Completed': return itemList.filter(item => item.isDone);\r\n      case 'All':\r\n      default: return itemList;\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <CardContent>\r\n      <h1 className = {styles.title}>Important tasks: </h1>\r\n      <InputItem \r\n        onClickAdd = {onClickAdd} \r\n        items = {items} \r\n      /> \r\n      <ItemList \r\n        items = {items} \r\n        onClickDone={onClickDone} \r\n        onClickDelete={onClickDelete}\r\n      />\r\n      <Footer count = {count} />\r\n    </CardContent>\r\n  );\r\n}\r\n\r\nexport default Todo; "]},"metadata":{},"sourceType":"module"}