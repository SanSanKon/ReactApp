{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0442\\u0441\\\\r\\\\src\\\\components\\\\About\\\\About.js\";\nimport React from 'react';\nimport CardContent from '@material-ui/core/CardContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Octokit } from '@octokit/rest';\nimport styles from './About.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst octokit = new Octokit();\n\nclass About extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      repoList: [],\n      userInfo: {},\n      userStatus: null,\n      repoStatus: null\n    };\n  }\n\n  componentDidMount() {\n    octokit.repos.listForUser({\n      username: 'SanSanKon'\n    }).then(({\n      data,\n      status\n    }) => {\n      this.setState({\n        repoList: data,\n        isLoading: false,\n        repoStatus: status\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false,\n        repoStatus: error.status\n      });\n    });\n    octokit.rest.users.getByUsername({\n      username: 'SanSanKon'\n    }).then(({\n      data,\n      status\n    }) => {\n      this.setState({\n        userInfo: data,\n        isLoading: false,\n        userStatus: status\n      });\n    }).catch(error => {\n      this.setState({\n        isLoading: false,\n        userStatus: error.status\n      });\n    });\n  }\n\n  render() {\n    const {\n      isLoading,\n      repoList,\n      userInfo,\n      userStatus,\n      repoStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(CardContent, {\n      className: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this) : 'About me'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), !isLoading && userStatus === 200 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userInfo.avatar_url,\n          alt: \"User-face\",\n          className: styles.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.login,\n          children: userInfo.login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.text,\n          children: userInfo.bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 6\n      }, this), !isLoading && userStatus !== 200 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"User information did not receive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 46\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }, this) : 'My repositories'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !isLoading && repoStatus === 200 && /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: styles.list,\n        children: repoList.map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.item,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            className: styles.link,\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, repo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 46\n      }, this), !isLoading && repoStatus !== 200 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.repos,\n        children: \"Error! Information about user repositories did not receive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default About;","map":{"version":3,"sources":["C:/Users/тс/r/src/components/About/About.js"],"names":["React","CardContent","CircularProgress","Octokit","styles","octokit","About","Component","state","isLoading","repoList","userInfo","userStatus","repoStatus","componentDidMount","repos","listForUser","username","then","data","status","setState","catch","error","rest","users","getByUsername","render","card","avatar_url","img","login","text","bio","list","map","repo","item","html_url","link","name","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Octokit } from '@octokit/rest';\r\nimport styles from './About.module.css';\r\n\r\n\r\nconst octokit = new Octokit();\r\n\r\nclass About extends React.Component {\r\n\tstate = {\r\n\t\tisLoading: true,\r\n\t\trepoList: [],\r\n\t\tuserInfo: {},\r\n\t\tuserStatus: null,\r\n      \trepoStatus: null\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\toctokit.repos.listForUser({\r\n\t\t\tusername: 'SanSanKon'\r\n\t\t}).then(({ data, status }) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\trepoList: data,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\trepoStatus: status\r\n\t\t\t});\r\n\t\t}).catch((error) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\trepoStatus: error.status\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\toctokit.rest.users.getByUsername({\r\n\t\t\tusername: 'SanSanKon'\r\n\t\t}).then(({ data, status }) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tuserInfo: data,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tuserStatus: status\r\n\t\t\t});\r\n\t\t}).catch((error) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tuserStatus: error.status\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { isLoading, repoList, userInfo, userStatus, repoStatus } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<CardContent className = {styles.card}>\r\n\t\t    <h1>{ isLoading ? <CircularProgress /> : 'About me' }</h1>\r\n          {!isLoading && userStatus === 200 &&\r\n\t\t  \t<div>\r\n          <img src={userInfo.avatar_url} alt=\"User-face\" className={styles.img}></img>\r\n\t\t\t\t\t<p className={styles.login}>{userInfo.login}</p>\r\n\t\t\t\t\t<p className={styles.text}>{userInfo.bio}</p>\r\n\t\t\t  </div>}\r\n        \r\n        {!isLoading && userStatus !== 200 && <p>User information did not receive</p>}\r\n        \r\n        <h2>{ isLoading ? <CircularProgress /> : 'My repositories' }</h2>\r\n        {!isLoading && repoStatus === 200 && <ol className = {styles.list}>\r\n          {repoList.map(repo => (<li key = {repo.id} className = {styles.item}>\r\n            <a href={repo.html_url} className = {styles.link}>{repo.name}</a>\r\n              </li>))}\r\n            </ol>}\r\n            {!isLoading && repoStatus !== 200 && <p className = {styles.repos}>Error! Information about user repositories did not receive</p>}\r\n\t    </CardContent>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport default About; "]},"metadata":{},"sourceType":"module"}